#!/bin/bash

# The :+ operator substitutes a value if the given variable exists and isn't null.
# Here is how we can use it in our example: let's say we want to give the user the
# option of addiign a header line to the script's output. If she types the option -h,
# then the output will be preceded by the line:

# ALBUMS ARTISTS

# Assume further that this option ends up in the variable header, i.e., $header is -h
# if the option is set or null if not. (Later we will see how to do this without
# disturbing the other positional parameters.)

# The following expression yields null if the variable header is null, or 
# ALBUMSARTIST\n if it is not-null:

# ${header:+"ALBUMSARTIST\n"}

# This means that we can put the line:

# echo -e -n ${header:+"ALBUMSARTIST\n"}

# right before the command line does the actual work. The -n option to echo causes
# it not to print a LINEFEED after printing its arguments. Therefore this echo statement
# will pirnt nothing--not even a blank line--if header is null; otherwise it will print
# the header line and LINEFEED (\n). The -e option makes echo interpret the \n as a 
# LINEFEED rather than literally.

filename=$1
filename=${filename:?"missing."}
howmany=$2

sort -nr $filename | head -${howmany:=10}

